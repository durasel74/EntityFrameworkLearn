using System;

namespace EntityFrameworkLearn.Model
{
	public class Lesson1 : Page
	{
		public Lesson1(string pageTitle, int pageId) : 
			base(pageTitle, pageId)
		{
			Text1 =
			"Entity Framework Core (EF Core) представляет собой " +
			"объектно-ориентированную, легковесную и расширяемую технологию " +
			"от компании Microsoft для доступа к данным. EF Core является " +
			"ORM-инструментом (object-relational mapping - отображения " +
			"данных на реальные объекты). То есть EF Core позволяет " +
			"работать базами данных, но представляет собой более высокий " +
			"уровень абстракции: EF Core позволяет абстрагироваться от самой " +
			"базы данных и ее таблиц и работать с данными независимо от типа " +
			"хранилища. Если на физическом уровне мы оперируем таблицами, " +
			"индексами, первичными и внешними ключами, но на концептуальном " +
			"уровне, который нам предлагает Entity Framework, мы уже работаем " +
			"с объектами.";

			Text2 =
			"Entity Framework Core поддерживает множество различных систем баз данных. " +
			"Таким образом, мы можем через EF Core работать с любой СУБД, если для нее " +
			"имеется нужный провайдер.";

			Text3 =
			"Также стоит отметить, что EF Core предоставляет универсальный API для работы " +
			"с данными. И если, к примеру, мы решим сменить целевую СУБД, то основные " +
			"изменения в проекте будут касаться прежде всего конфигурации и настройки " +
			"подключения к соответствующим провайдерам. А код, который непосредственно " +
			"работает с данными, получает данные, добавляет их в БД и т.д., останется прежним.";

			Text4 =
			"Центральной концепцией Entity Framework является понятие сущности или entity. " +
			"Сущность определяет набор данных, которые связаны с определенным объектом. " +
			"Поэтому данная технология предполагает работу не с таблицами, а с объектами " +
			"и их коллекциями.";

			Text5 =
			"Любая сущность, как и любой объект из реального мира, обладает рядом свойств. " +
			"Например, если сущность описывает человека, то мы можем выделить такие свойства, " +
			"как имя, фамилия, рост, возраст. Свойства необязательно представляют простые данные " +
			"типа int или string, но могут также представлять и более комплексные типы данных. " +
			"И у каждой сущности может быть одно или несколько свойств, которые будут отличать " +
			"эту сущность от других и будут уникально определять эту сущность. Подобные свойства " +
			"называют ключами.";

			Text6 =
			"Отличительной чертой Entity Framework Core, как технологии ORM, является использование " +
			"запросов LINQ для выборки данных из БД. С помощью LINQ мы можем создавать различные " +
			"запросы на выборку объектов, в том числе связанных различными ассоциативными связями. " +
			"А Entity Framework при выполнение запроса транслирует выражения LINQ в выражения, понятные " +
			"для конкретной СУБД (как правило, в выражения SQL).";
		}

		public string Text1 { get; set; }
		public string Text2 { get; set; }
		public string Text3 { get; set; }
		public string Text4 { get; set; }
		public string Text5 { get; set; }
		public string Text6 { get; set; }
	}
}
